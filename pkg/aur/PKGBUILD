# Maintainer: Ronald Record <github@ronrecord.com>

# Get the version and release from the VERSION file
# Move to use of pkgver() function with something like this:
#   git describe --long | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
#
if [ -f VERSION ]
then
  . ./VERSION
else
  [ "${SRC}" ] || SRC="${HOME}/src/mpcplus"
  if [ -f ${SRC}/VERSION ]
  then
    . ${SRC}/VERSION
  else
    VERSION=1.0.1
    RELEASE=1
    PACKAGE=1
  fi
fi

pkgname=mpcplus
pkgver=v${VERSION}r${RELEASE}
pkgrel=${PACKAGE}
pkgdesc="NCurses character based MPD client"
arch=('x86_64' 'armv7h')
url="https://github.com/doctorfree/mpcplus"
license=('GPL2')

depends=(boost-libs libcurl-compat libmpdclient ncurses icu readline taglib mpc python python-pip fftw)
makedepends=(boost git pandoc zip)
install=mpcplus.install
source=("${pkgname}::git+https://github.com/doctorfree/mpcplus.git")
sha256sums=('SKIP')

prepare() {
  cd "${srcdir}/${pkgname}"
}

build() {
  cd "${srcdir}/${pkgname}"
  # Build mpcplus
  if [ -x scripts/build-mpcplus.sh ]
  then
    scripts/build-mpcplus.sh -v
  else
    cd mpcplus
    make clean
    make distclean
    [ -x ./configure ] || ./autogen.sh > /dev/null
    ./configure --prefix=/usr \
                --enable-static-boost \
                --enable-outputs \
                --enable-clock \
                --enable-visualizer \
                --with-fftw \
                --with-taglib > configure$$.out
    make > make$$.out
    cd src
    rm -f mpcplus
    g++ -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-clash-protection -fcf-protection -Wp,-D_GLIBCXX_ASSERTIONS -flto -ftree-vectorize -ffast-math -std=c++14 -Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z -Wl,relro -Wl,-z -Wl,now -Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z -Wl,relro -Wl,-z -Wl,now -o mpcplus curses/formatted_color.o curses/scrollpad.o curses/window.o screens/browser.o screens/clock.o screens/help.o screens/lastfm.o screens/lyrics.o screens/media_library.o screens/outputs.o screens/playlist.o screens/playlist_editor.o screens/screen.o screens/screen_type.o screens/search_engine.o screens/sel_items_adder.o screens/server_info.o screens/song_info.o screens/sort_playlist.o screens/tag_editor.o screens/tiny_tag_editor.o screens/visualizer.o utility/comparators.o utility/html.o utility/option_parser.o utility/sample_buffer.o utility/string.o utility/type_conversions.o utility/wide_string.o actions.o bindings.o charset.o configuration.o curl_handle.o display.o enums.o format.o global.o helpers.o lastfm_service.o lyrics_fetcher.o macro_utilities.o mpdpp.o mutable_song.o mpcplus.o settings.o song.o song_list.o status.o statusbar.o tags.o title.o  -Wl,-Bstatic -lboost_date_time -lboost_filesystem -lboost_locale -lboost_program_options -lboost_regex -lboost_thread -lboost_system -Wl,-Bdynamic -licui18n -licuuc -licudata -lmpdclient -lreadline -lpthread -lncursesw -lfftw3 -lcurl -ltag -lz -pthread

    cd ..
    WERR="-Wextra -Wshadow -Werror -Wno-error=deprecated-declarations"
    CXXFLAGS="-O2 -march=native -pipe -std=c++0x ${WERR}"
    make CXXFLAGS="${CXXFLAGS}" -C extras
    make -C terminal_dimensions
    cd ..
  fi
}

package() {
  cd "${srcdir}/${pkgname}"
  destdir=usr
  for dir in "${destdir}" "${destdir}/share" "${destdir}/share/man" \
    "${destdir}/share/applications" "${destdir}/share/doc" \
    "${destdir}/share/doc/${pkgname}" \
    "${destdir}/share/consolefonts" "${destdir}/share/${pkgname}" \
    "${destdir}/share/licenses" "${destdir}/share/licenses/${pkgname}"
  do
    [ -d ${pkgdir}/${dir} ] || mkdir ${pkgdir}/${dir}
  done

  for dir in bin
  do
    [ -d ${pkgdir}/${destdir}/${dir} ] && rm -rf ${pkgdir}/${destdir}/${dir}
  done

  cp -a bin ${pkgdir}/${destdir}/bin
  cp src/mpcplus ${pkgdir}/${destdir}/bin/mpcplus
  cp extras/artist_to_albumartist \
           ${pkgdir}/${destdir}/bin/artist_to_albumartist
  cp terminal_dimensions/terminal_dimensions \
           ${pkgdir}/${destdir}/bin/terminal_dimensions
  cp *.desktop "${pkgdir}/${destdir}/share/applications"
  cp copyright ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp NOTICE ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp AUTHORS ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp CHANGELOG.md ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp README.md ${pkgdir}/${destdir}/share/doc/${pkgname}
  pandoc -f gfm README.md | \
    tee ${pkgdir}/${destdir}/share/doc/${pkgname}/README.html > /dev/null
  gzip -9 ${pkgdir}/${destdir}/share/doc/${pkgname}/CHANGELOG.md

  cp AUTHORS ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp COPYING ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp CHANGELOG.md ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp README.md ${pkgdir}/${destdir}/share/doc/${pkgname}

  cp doc/config ${pkgdir}/${destdir}/share/${pkgname}
  cp doc/bindings ${pkgdir}/${destdir}/share/${pkgname}
  cp share/mpcplus-cheat-sheet.txt ${pkgdir}/${destdir}/share/${pkgname}
  cp share/mpcplus-cheat-sheet.md ${pkgdir}/${destdir}/share/${pkgname}

  cp -a share/scripts ${pkgdir}/${destdir}/share/${pkgname}/scripts

  cp -a man/man1 ${pkgdir}/${destdir}/share/man/man1
  cp -a share/menu "${pkgdir}/${destdir}/share/menu"

  [ -f .gitignore ] && {
    while read ignore
    do
        rm -f ${pkgdir}/${destdir}/${ignore}
    done < .gitignore
  }

  chmod 644 ${pkgdir}/${destdir}/share/man/*/*
  chmod 644 ${pkgdir}/${destdir}/share/menu/*
  chmod 755 ${pkgdir}/${destdir}/bin/* \
            ${pkgdir}/${destdir}/bin \
            ${pkgdir}/${destdir}/share/man \
            ${pkgdir}/${destdir}/share/man/* \
            ${pkgdir}/${destdir}/share/${pkgname}/scripts/*
}
